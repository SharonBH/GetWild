//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL.SMSService {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="apiItnewsletter", ConfigurationName="SMSService.WebServiceSMSSoap")]
    public interface WebServiceSMSSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string getSmsCount(string un, string pw, int accid, string sysPW, string t);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsCount", ReplyAction="*")]
        System.Threading.Tasks.Task<string> getSmsCountAsync(string un, string pw, int accid, string sysPW, string t);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendSMSrecipients(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendSMSrecipientsAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/rSms", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string rSms(string cellSender, string txtCell_SIM_id, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/rSms", ReplyAction="*")]
        System.Threading.Tasks.Task<string> rSmsAsync(string cellSender, string txtCell_SIM_id, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsDeliveryStatuses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BLL.SMSService.getSmsDeliveryStatusesResponse getSmsDeliveryStatuses(BLL.SMSService.getSmsDeliveryStatusesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsDeliveryStatuses", ReplyAction="*")]
        System.Threading.Tasks.Task<BLL.SMSService.getSmsDeliveryStatusesResponse> getSmsDeliveryStatusesAsync(BLL.SMSService.getSmsDeliveryStatusesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsDeliveryStatuses_winf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BLL.SMSService.getSmsDeliveryStatuses_winfResponse getSmsDeliveryStatuses_winf(BLL.SMSService.getSmsDeliveryStatuses_winfRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsDeliveryStatuses_winf", ReplyAction="*")]
        System.Threading.Tasks.Task<BLL.SMSService.getSmsDeliveryStatuses_winfResponse> getSmsDeliveryStatuses_winfAsync(BLL.SMSService.getSmsDeliveryStatuses_winfRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendSMSrecipients_winf(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendSMSrecipients_winfAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf_debug", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendSMSrecipients_winf_debug(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf_debug", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendSMSrecipients_winf_debugAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf_wac", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string sendSMSrecipients_winf_wac(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf, int anc);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/sendSMSrecipients_winf_wac", ReplyAction="*")]
        System.Threading.Tasks.Task<string> sendSMSrecipients_winf_wacAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf, int anc);
        
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsResponses", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        BLL.SMSService.getSmsResponsesResponse getSmsResponses(BLL.SMSService.getSmsResponsesRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="apiItnewsletter/getSmsResponses", ReplyAction="*")]
        System.Threading.Tasks.Task<BLL.SMSService.getSmsResponsesResponse> getSmsResponsesAsync(BLL.SMSService.getSmsResponsesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsDeliveryStatuses", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsDeliveryStatusesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public string un;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string pw;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=2)]
        public int accid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=3)]
        public string sysPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=4)]
        public int DAY;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=5)]
        public int MONTH;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=6)]
        public int YEAR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=7)]
        public string ErrorEx;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=8)]
        public string t;
        
        public getSmsDeliveryStatusesRequest() {
        }
        
        public getSmsDeliveryStatusesRequest(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, string ErrorEx, string t) {
            this.un = un;
            this.pw = pw;
            this.accid = accid;
            this.sysPW = sysPW;
            this.DAY = DAY;
            this.MONTH = MONTH;
            this.YEAR = YEAR;
            this.ErrorEx = ErrorEx;
            this.t = t;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsDeliveryStatusesResponse", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsDeliveryStatusesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public System.Data.DataTable getSmsDeliveryStatusesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string ErrorEx;
        
        public getSmsDeliveryStatusesResponse() {
        }
        
        public getSmsDeliveryStatusesResponse(System.Data.DataTable getSmsDeliveryStatusesResult, string ErrorEx) {
            this.getSmsDeliveryStatusesResult = getSmsDeliveryStatusesResult;
            this.ErrorEx = ErrorEx;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsDeliveryStatuses_winf", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsDeliveryStatuses_winfRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public string un;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string pw;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=2)]
        public int accid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=3)]
        public string sysPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=4)]
        public int DAY;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=5)]
        public int MONTH;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=6)]
        public int YEAR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=7)]
        public string ErrorEx;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=8)]
        public string t;
        
        public getSmsDeliveryStatuses_winfRequest() {
        }
        
        public getSmsDeliveryStatuses_winfRequest(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, string ErrorEx, string t) {
            this.un = un;
            this.pw = pw;
            this.accid = accid;
            this.sysPW = sysPW;
            this.DAY = DAY;
            this.MONTH = MONTH;
            this.YEAR = YEAR;
            this.ErrorEx = ErrorEx;
            this.t = t;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsDeliveryStatuses_winfResponse", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsDeliveryStatuses_winfResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public System.Data.DataTable getSmsDeliveryStatuses_winfResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string ErrorEx;
        
        public getSmsDeliveryStatuses_winfResponse() {
        }
        
        public getSmsDeliveryStatuses_winfResponse(System.Data.DataTable getSmsDeliveryStatuses_winfResult, string ErrorEx) {
            this.getSmsDeliveryStatuses_winfResult = getSmsDeliveryStatuses_winfResult;
            this.ErrorEx = ErrorEx;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsResponses", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsResponsesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public string un;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string pw;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=2)]
        public int accid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=3)]
        public string sysPW;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=4)]
        public int DAY;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=5)]
        public int MONTH;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=6)]
        public int YEAR;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=7)]
        public string ErrorEx;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=8)]
        public string t;
        
        public getSmsResponsesRequest() {
        }
        
        public getSmsResponsesRequest(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, string ErrorEx, string t) {
            this.un = un;
            this.pw = pw;
            this.accid = accid;
            this.sysPW = sysPW;
            this.DAY = DAY;
            this.MONTH = MONTH;
            this.YEAR = YEAR;
            this.ErrorEx = ErrorEx;
            this.t = t;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getSmsResponsesResponse", WrapperNamespace="apiItnewsletter", IsWrapped=true)]
    public partial class getSmsResponsesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=0)]
        public System.Data.DataTable getSmsResponsesResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="apiItnewsletter", Order=1)]
        public string ErrorEx;
        
        public getSmsResponsesResponse() {
        }
        
        public getSmsResponsesResponse(System.Data.DataTable getSmsResponsesResult, string ErrorEx) {
            this.getSmsResponsesResult = getSmsResponsesResult;
            this.ErrorEx = ErrorEx;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSMSSoapChannel : BLL.SMSService.WebServiceSMSSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSMSSoapClient : System.ServiceModel.ClientBase<BLL.SMSService.WebServiceSMSSoap>, BLL.SMSService.WebServiceSMSSoap {
        
        public WebServiceSMSSoapClient() {
        }
        
        public WebServiceSMSSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSMSSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSMSSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSMSSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string getSmsCount(string un, string pw, int accid, string sysPW, string t) {
            return base.Channel.getSmsCount(un, pw, accid, sysPW, t);
        }
        
        public System.Threading.Tasks.Task<string> getSmsCountAsync(string un, string pw, int accid, string sysPW, string t) {
            return base.Channel.getSmsCountAsync(un, pw, accid, sysPW, t);
        }
        
        public string sendSMSrecipients(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver) {
            return base.Channel.sendSMSrecipients(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver);
        }
        
        public System.Threading.Tasks.Task<string> sendSMSrecipientsAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver) {
            return base.Channel.sendSMSrecipientsAsync(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver);
        }
        
        public string rSms(string cellSender, string txtCell_SIM_id, string message) {
            return base.Channel.rSms(cellSender, txtCell_SIM_id, message);
        }
        
        public System.Threading.Tasks.Task<string> rSmsAsync(string cellSender, string txtCell_SIM_id, string message) {
            return base.Channel.rSmsAsync(cellSender, txtCell_SIM_id, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BLL.SMSService.getSmsDeliveryStatusesResponse BLL.SMSService.WebServiceSMSSoap.getSmsDeliveryStatuses(BLL.SMSService.getSmsDeliveryStatusesRequest request) {
            return base.Channel.getSmsDeliveryStatuses(request);
        }
        
        public System.Data.DataTable getSmsDeliveryStatuses(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, ref string ErrorEx, string t) {
            BLL.SMSService.getSmsDeliveryStatusesRequest inValue = new BLL.SMSService.getSmsDeliveryStatusesRequest();
            inValue.un = un;
            inValue.pw = pw;
            inValue.accid = accid;
            inValue.sysPW = sysPW;
            inValue.DAY = DAY;
            inValue.MONTH = MONTH;
            inValue.YEAR = YEAR;
            inValue.ErrorEx = ErrorEx;
            inValue.t = t;
            BLL.SMSService.getSmsDeliveryStatusesResponse retVal = ((BLL.SMSService.WebServiceSMSSoap)(this)).getSmsDeliveryStatuses(inValue);
            ErrorEx = retVal.ErrorEx;
            return retVal.getSmsDeliveryStatusesResult;
        }
        
        public System.Threading.Tasks.Task<BLL.SMSService.getSmsDeliveryStatusesResponse> getSmsDeliveryStatusesAsync(BLL.SMSService.getSmsDeliveryStatusesRequest request) {
            return base.Channel.getSmsDeliveryStatusesAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BLL.SMSService.getSmsDeliveryStatuses_winfResponse BLL.SMSService.WebServiceSMSSoap.getSmsDeliveryStatuses_winf(BLL.SMSService.getSmsDeliveryStatuses_winfRequest request) {
            return base.Channel.getSmsDeliveryStatuses_winf(request);
        }
        
        public System.Data.DataTable getSmsDeliveryStatuses_winf(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, ref string ErrorEx, string t) {
            BLL.SMSService.getSmsDeliveryStatuses_winfRequest inValue = new BLL.SMSService.getSmsDeliveryStatuses_winfRequest();
            inValue.un = un;
            inValue.pw = pw;
            inValue.accid = accid;
            inValue.sysPW = sysPW;
            inValue.DAY = DAY;
            inValue.MONTH = MONTH;
            inValue.YEAR = YEAR;
            inValue.ErrorEx = ErrorEx;
            inValue.t = t;
            BLL.SMSService.getSmsDeliveryStatuses_winfResponse retVal = ((BLL.SMSService.WebServiceSMSSoap)(this)).getSmsDeliveryStatuses_winf(inValue);
            ErrorEx = retVal.ErrorEx;
            return retVal.getSmsDeliveryStatuses_winfResult;
        }
        
        public System.Threading.Tasks.Task<BLL.SMSService.getSmsDeliveryStatuses_winfResponse> getSmsDeliveryStatuses_winfAsync(BLL.SMSService.getSmsDeliveryStatuses_winfRequest request) {
            return base.Channel.getSmsDeliveryStatuses_winfAsync(request);
        }
        
        public string sendSMSrecipients_winf(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf) {
            return base.Channel.sendSMSrecipients_winf(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf);
        }
        
        public System.Threading.Tasks.Task<string> sendSMSrecipients_winfAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf) {
            return base.Channel.sendSMSrecipients_winfAsync(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf);
        }
        
        public string sendSMSrecipients_winf_debug(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf) {
            return base.Channel.sendSMSrecipients_winf_debug(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf);
        }
        
        public System.Threading.Tasks.Task<string> sendSMSrecipients_winf_debugAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf) {
            return base.Channel.sendSMSrecipients_winf_debugAsync(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf);
        }
        
        public string sendSMSrecipients_winf_wac(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf, int anc) {
            return base.Channel.sendSMSrecipients_winf_wac(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf, anc);
        }
        
        public System.Threading.Tasks.Task<string> sendSMSrecipients_winf_wacAsync(string un, string pw, int accid, string sysPW, string t, string txtUserCellular, string destination, string txtSMSmessage, string dteToDeliver, string txtAddInf, int anc) {
            return base.Channel.sendSMSrecipients_winf_wacAsync(un, pw, accid, sysPW, t, txtUserCellular, destination, txtSMSmessage, dteToDeliver, txtAddInf, anc);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BLL.SMSService.getSmsResponsesResponse BLL.SMSService.WebServiceSMSSoap.getSmsResponses(BLL.SMSService.getSmsResponsesRequest request) {
            return base.Channel.getSmsResponses(request);
        }
        
        public System.Data.DataTable getSmsResponses(string un, string pw, int accid, string sysPW, int DAY, int MONTH, int YEAR, ref string ErrorEx, string t) {
            BLL.SMSService.getSmsResponsesRequest inValue = new BLL.SMSService.getSmsResponsesRequest();
            inValue.un = un;
            inValue.pw = pw;
            inValue.accid = accid;
            inValue.sysPW = sysPW;
            inValue.DAY = DAY;
            inValue.MONTH = MONTH;
            inValue.YEAR = YEAR;
            inValue.ErrorEx = ErrorEx;
            inValue.t = t;
            BLL.SMSService.getSmsResponsesResponse retVal = ((BLL.SMSService.WebServiceSMSSoap)(this)).getSmsResponses(inValue);
            ErrorEx = retVal.ErrorEx;
            return retVal.getSmsResponsesResult;
        }
        
        public System.Threading.Tasks.Task<BLL.SMSService.getSmsResponsesResponse> getSmsResponsesAsync(BLL.SMSService.getSmsResponsesRequest request) {
            return base.Channel.getSmsResponsesAsync(request);
        }
    }
}
